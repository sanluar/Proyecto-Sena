-- MySQL Script generated by MySQL Workbench
-- 12/11/19 16:30:49
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Categoria` (
  `pkIdCategoria` INT(11) NOT NULL COMMENT 'Este atributo es el identificador y la llave primaria de la categoría del producto.',
  `nombreCategoria` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el dato que representa el nombre de la categoría del producto.',
  PRIMARY KEY (`pkIdCategoria`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'La presente tabla es conformada por los atributos, IdCategoria (identificador principal) y nombreCategoria (descripción categoría).';


-- -----------------------------------------------------
-- Table `mydb`.`Documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Documento` (
  `idTipoDocumento` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo es la llave primaria (identificador) de la presente tabla.',
  `nombreDocumento` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el dato que se designa a la descripcion del documento. ',
  PRIMARY KEY (`idTipoDocumento`)  COMMENT '')
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se tiene un Id como identificador, este es la llave primaria. tambien se encuentra el nombre del documento para la descripción del mismo.';


-- -----------------------------------------------------
-- Table `mydb`.`Persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Persona` (
  `pkIdPersona` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo, representa y almacena el id de la persona. Es la llave primaria correspondiente de la presente tabla.',
  `fkIdDocumento` INT(20) NOT NULL COMMENT 'Este atributo, representa y almacena el id del documento, es una llave foranea hereda de la tabla denominada Documento.',
  `nombre` VARCHAR(70) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al nombre de la persona. ',
  `apellido` VARCHAR(120) NOT NULL COMMENT 'En este atributo se almacena el dato referente al apellido de la persona. ',
  `correoElectronico` VARCHAR(45) NULL COMMENT 'En este atributo se almacena el dato correspondiente al correo electrónico. ',
  PRIMARY KEY (`pkIdPersona`)  COMMENT '',
  INDEX `idDocumento_idx` (`fkIdDocumento` ASC)  COMMENT '',
  CONSTRAINT `idDocumento`
    FOREIGN KEY (`fkIdDocumento`)
    REFERENCES `mydb`.`Documento` (`idTipoDocumento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se almacenan los datos correspondientes a la persona. Tiene como atributos, idPersona, IdDocumento, nombre, apellido y correoElectronico.';


-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `Personas_pkIdPersona` INT(11) NOT NULL COMMENT 'Éste atributo es el identificador de la presente tabla. Es una llave primaria que proviene de la tabla denominada Persona y determina la existencia del cliente.',
  `genero` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato que especifica si el cliente es de género masculino, femenino u otro. ',
  `edad` INT(11) NOT NULL COMMENT 'Dentro de este atributo se guarda el dato de la edad de un cliente. Su función es permitir a futuro estadística de compra por el cliente. ',
  PRIMARY KEY (`Personas_pkIdPersona`)  COMMENT '',
  INDEX `fk_Cliente_Personas1_idx` (`Personas_pkIdPersona` ASC)  COMMENT '',
  CONSTRAINT `fk_Cliente_Personas1`
    FOREIGN KEY (`Personas_pkIdPersona`)
    REFERENCES `mydb`.`Persona` (`pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8
COMMENT = 'La presente tabla almacena los datos que tiene especificamente el cliente, los cuales son el género y la edad, y esta identificado por un id principal (pkIdPersona)';


-- -----------------------------------------------------
-- Table `mydb`.`Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contacto` (
  `Persona_pkIdPersona` INT(11) NOT NULL COMMENT 'Este atributo, indica el id de la persona. Se encuentra como llave foranea para aplicar varios datos telefónicos si se considera pertinente; proviene de la tabla denominada Persona.',
  `telefono` INT(11) NOT NULL COMMENT 'Dentro de este atributo se almacena el número telefónico de la persona. ',
  INDEX `fk_Contacto_Persona1_idx` (`Persona_pkIdPersona` ASC)  COMMENT '',
  CONSTRAINT `fk_Contacto_Persona1`
    FOREIGN KEY (`Persona_pkIdPersona`)
    REFERENCES `mydb`.`Persona` (`pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se almacena el número de contacto para la persona existente en el sistema, por ello se usa la llave foranea persona (la identidad) para agregar más datos si se considera pertinente.';


-- -----------------------------------------------------
-- Table `mydb`.`Factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Factura` (
  `pkIdFactura` INT(11) NOT NULL COMMENT 'Este atributo, indica el id de la factura. Se encuentra como llave primaria para la identidad de la factura. ',
  `Cliente_Personas_pkIdPersona` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Éste atributo, indica el id del cliente. Se encuentra como llave foranea, proveniente de la tabla denominada Cliente. Su función es perminir varios registros del mismo. ',
  `fechaFactura` DATE NOT NULL COMMENT 'En el campo de este atributo se almacena el dato de la fecha facturada de compra realizada por el cliente. ',
  PRIMARY KEY (`pkIdFactura`)  COMMENT '',
  INDEX `fk_Factura_Cliente1_idx` (`Cliente_Personas_pkIdPersona` ASC)  COMMENT '',
  CONSTRAINT `fk_Factura_Cliente1`
    FOREIGN KEY (`Cliente_Personas_pkIdPersona`)
    REFERENCES `mydb`.`Cliente` (`Personas_pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se almacena los datos correspondientes a la factura de venta al cliente. Ésta, tiene un id único e irrepetible. sus atributos son la anterior mencionada, idCliente y fecha. ';


-- -----------------------------------------------------
-- Table `mydb`.`Permiso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Permiso` (
  `pkIdPermiso` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo es la llave primaria. En él se almacena el dato que identifica el permiso disponible para el usuario.',
  `nombrePermiso` VARCHAR(45) NOT NULL COMMENT 'En éste atributo se almacena el dato para especificar o describir el nombre del permiso.',
  PRIMARY KEY (`pkIdPermiso`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se aloja los datos correspondientes a los permisos disponibles para los usuarios. Los atributos son, pkIdPermiso y el nombre del permiso, para especificar el mismo.';


-- -----------------------------------------------------
-- Table `mydb`.`RolUsuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`RolUsuario` (
  `pkIdRol` INT(11) NOT NULL COMMENT 'Este atributo, representa y almacena el id del Rol disponible para el usuario; es una llave primaria, siendo de tipo entero y de caracter obligatorio.',
  `nombreRol` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al nombre del rol, para describirlo. Este es de tipo Varchar para permitir datos alfa-numericos y es notnull.',
  PRIMARY KEY (`pkIdRol`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla, se encuentra los atributos del rol de usuario, tiene una llave primaria, idRol y nombreRol para la descripcion del rol.';


-- -----------------------------------------------------
-- Table `mydb`.`PermisoRol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PermisoRol` (
  `Rol_pkIdRol` INT(11) NOT NULL COMMENT 'Éste atributo es una llave foranea heredada de la tabla denominada Rol. En él se almacena el dato que identifica el Rol de usuario.',
  `Permiso_pkIdPermiso` INT(11) NOT NULL COMMENT 'Éste atributo es una llave foranea, puesto que proviene de la tabla denominada Permiso; En él se almacena el dato que identifica el permiso.',
  INDEX `fk_PermisosRol_Rol1_idx` (`Rol_pkIdRol` ASC)  COMMENT '',
  INDEX `fk_PermisosRol_Permiso1_idx` (`Permiso_pkIdPermiso` ASC)  COMMENT '',
  CONSTRAINT `fk_permisos`
    FOREIGN KEY (`Permiso_pkIdPermiso`)
    REFERENCES `mydb`.`Permiso` (`pkIdPermiso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_roles`
    FOREIGN KEY (`Rol_pkIdRol`)
    REFERENCES `mydb`.`RolUsuario` (`pkIdRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se encuentran los atributos idRol y  idPermiso; ambos atributos son llaves foraneas y son de tipo entero.';


-- -----------------------------------------------------
-- Table `mydb`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Producto` (
  `pkIdProducto` INT(11) NOT NULL COMMENT 'Este atributo, representa y almacena el id del producto que ingresa a la empresa como registro.',
  `Categoria_pkIdCategoria` INT(11) NOT NULL COMMENT 'Este atributo, representa y almacena el id de la categoría que pertenence el producto. Es una llave foranea que proviene de la tabla denominada Categoria. ',
  `nombreProducto` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato referente al nombre del producto que ingresa al inventario. Es la descripción del mismo.',
  `caducidad` DATE NULL COMMENT 'Este atributo, almacena el dato designado a la vida útil del producto. Solamente se añade al producto que lo requiera.',
  PRIMARY KEY (`pkIdProducto`)  COMMENT '',
  INDEX `fk_Producto_Categoria1_idx` (`Categoria_pkIdCategoria` ASC)  COMMENT '',
  CONSTRAINT `fk_Producto_Categoria1`
    FOREIGN KEY (`Categoria_pkIdCategoria`)
    REFERENCES `mydb`.`Categoria` (`pkIdCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Dentro de la presente tabla, se aloja los siguiente atributos, pkIdProducto, idCategoria, nombreProducto y caducidad.';


-- -----------------------------------------------------
-- Table `mydb`.`ProductoVenta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProductoVenta` (
  `Producto_pkIdProducto` INT(11) NOT NULL COMMENT 'Este atributo, representa y almacena el id del producto para la venta. Este es un dato unico e irrepetible (dado que es llave primaria) dentro de la tabla es entero y de caracter obligatorio.',
  `cantidad` INT(12) NOT NULL COMMENT 'En este atributo se almacena el dato referente a la cantidad del producto perteneciente en el inventario de la empresa. Este es de tipo entero y notnull.',
  `PrecioVenta` INT(10) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al precio unitario que se pone en venta por la empresa. Este es de tipo entero para permitir solamente datos numericos y es de caracter obligatorio.',
  `iva` DECIMAL(8) NOT NULL COMMENT 'Dentro de este atributo se almacena el dato correspondiente al iva del producto. Este es de tipo decimal y de igual manera es obligatorio.',
  INDEX `fk_ProductoConsumible_ProductoObjeto1_idx` (`Producto_pkIdProducto` ASC)  COMMENT '',
  PRIMARY KEY (`Producto_pkIdProducto`)  COMMENT '',
  CONSTRAINT `fk_ProductoConsumible_ProductoObjeto1`
    FOREIGN KEY (`Producto_pkIdProducto`)
    REFERENCES `mydb`.`Producto` (`pkIdProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'En la presente tabla, se alojan los atributos del producto en venta al cliente; estos son, id del producto, cantidad, precioVenta e iva.';


-- -----------------------------------------------------
-- Table `mydb`.`ProductoFactura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProductoFactura` (
  `Factura_pkIdFactura` INT(11) NOT NULL COMMENT 'Dentro de este atributo se almacena el id de la factura. Éste es una foranea que proviene de la tabla denominada Factura, permite múltiples datos dentro ésta.\n',
  `Producto_pkIdProducto` INT(11) NOT NULL COMMENT 'Dentro de este atributo se almacena el id del producto. Éste es una foranea que proviene de la tabla denominada Producto, es el indicador del producto solicitado por el cliente.\n',
  `cantidadVenta` INT(8) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente a la cantidad del producto dado en venta al cliente. ',
  `subtotal` INT(8) NOT NULL COMMENT 'En este atributo se almacena el dato referente al subtotal (producto sin iva+ cantidad) de la venta realizada al cliente. ',
  `iva` DECIMAL(8) NOT NULL COMMENT 'En este atributo se almacena el dato referente al iva de la compra general de productos hecho por el cliente. ',
  `totalVenta` INT(10) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al valor total de la venta (subtotal+ iva). ',
  INDEX `fk_Producto_has_Factura_Factura1_idx` (`Factura_pkIdFactura` ASC)  COMMENT '',
  CONSTRAINT `fk_Producto_has_Factura_Factura1`
    FOREIGN KEY (`Factura_pkIdFactura`)
    REFERENCES `mydb`.`Factura` (`pkIdFactura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productofactura_ProductoVenta1`
    FOREIGN KEY (`Producto_pkIdProducto`)
    REFERENCES `mydb`.`ProductoVenta` (`Producto_pkIdProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla se almacena los datos correspondientes al producto comprado por el cliente. Ésta, tiene un id de factura y un id del producto, estas son foraneas. Adicional a ello, tiene como atributos cantidadVenta, subtotal, iva y totalVenta.';


-- -----------------------------------------------------
-- Table `mydb`.`Proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Proveedor` (
  `Persona_pkIdPersona` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo, representa y almacena el id del proveedor; en si es una llave primaria que proviene de la tabla denominada Persona. Este es un dato unico e irrepetible dentro de la tabla es entero y de caracter obligatorio.',
  `Categoria_pkIdCategoria` INT(11) NOT NULL COMMENT 'En este atributo se almacena el id correspondiente de la categoria de productos que suministra el proveedor. Es una llave primaria que proviene de la tabla denominada Categoria.',
  `Direccion` VARCHAR(45) NOT NULL COMMENT 'Este atributo almacena el dato referente a la direccion del proveedor. Este es de tipo varchar y cuenta con obligatoriedad.',
  PRIMARY KEY (`Persona_pkIdPersona`, `Categoria_pkIdCategoria`)  COMMENT '',
  INDEX `fk_Proveedor_Categoria1_idx` (`Categoria_pkIdCategoria` ASC)  COMMENT '',
  CONSTRAINT `fk_Proveedor_Persona1`
    FOREIGN KEY (`Persona_pkIdPersona`)
    REFERENCES `mydb`.`Persona` (`pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Proveedor_Categoria1`
    FOREIGN KEY (`Categoria_pkIdCategoria`)
    REFERENCES `mydb`.`Categoria` (`pkIdCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla, se alojan los atributos pertenecientes al proveedor; estos son, id Persona, tipoProducto y direccion.';


-- -----------------------------------------------------
-- Table `mydb`.`ProveedorProducto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProveedorProducto` (
  `Proveedor_Persona_pkIdPersona` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo, representa y almacena el id del proveedor; en si es una llave foranea que proviene de la tabla denominada Persona. Este es entero y de caracter obligatorio.',
  `Producto_pkIdProducto` INT(11) NOT NULL COMMENT 'Este atributo almacena el dato designado al producto que suministra el proveedor, es una llave foranea proveniente de la tabla producto. Este es de tipo varchar y cuenta con obligatoriedad.',
  INDEX `fk_Proveedor_has_Producto_Producto1_idx` (`Producto_pkIdProducto` ASC)  COMMENT '',
  INDEX `fk_Proveedor_has_Producto_Proveedor1_idx` (`Proveedor_Persona_pkIdPersona` ASC)  COMMENT '',
  CONSTRAINT `fk_Proveedor_has_Producto_Producto1`
    FOREIGN KEY (`Producto_pkIdProducto`)
    REFERENCES `mydb`.`Producto` (`pkIdProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Proveedor_has_Producto_Proveedor1`
    FOREIGN KEY (`Proveedor_Persona_pkIdPersona`)
    REFERENCES `mydb`.`Proveedor` (`Persona_pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8
COMMENT = 'En la presente tabla, se alojan los atributos necesarios para la solicitud de productos mediante una orden de compra; estos son, id orden de compra, productoRequerido, valorUnitario, ivaProducto, cantidadProducto, subtotal, ivaTotal y valorTotal.';


-- -----------------------------------------------------
-- Table `mydb`.`Trabajador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Trabajador` (
  `Persona_pkIdPersona` INT(11) NOT NULL COMMENT 'Este atributo, representa y almacena el id del trabajador; en si es una llave primaria que proviene de la tabla denominada Persona. Este es un dato unico e irrepetible dentro de la tabla, es entero y de caracter obligatorio.',
  `fechaContratacion` DATE NOT NULL COMMENT 'Este atributo, almacena el dato referente a la fecha de contratacion. Este es un dato notnull y  se guarda como DATE.',
  `direccion` VARCHAR(45) NOT NULL COMMENT 'Este atributo representa y almacena el dato correspondiente a la direccion del trabajador. Este es de tipo Varchar para el ingreso de datos alfa-numericos y de caracter obligatorio.',
  `cargo` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato referente al cargo designado en empresa para el trabajado. Este es de tipo Varchar para permitir datos alfa-numericos y cuenta con obligatoriedad.',
  `eps` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato designado a la EPS del trabajador. Este es de tipo Varchar para permitir datos alfa-numericos y de caracter obligatorio.',
  PRIMARY KEY (`Persona_pkIdPersona`)  COMMENT '',
  CONSTRAINT `fk_trabajador_Personas1`
    FOREIGN KEY (`Persona_pkIdPersona`)
    REFERENCES `mydb`.`Persona` (`pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'La presente tabla, contiene un id Persona para el identificador del trabajador, adicional a ello, estan los atributos, fechaContratacion, Direccion, cargo y eps.';


-- -----------------------------------------------------
-- Table `mydb`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Usuario` (
  `trabajador_Personas_pkIdPersona` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Este atributo, representa y almacena el id del trabajador que posee usuario;es una llave primaria que proviene de la tabla denominada Trabajador. Este es un dato unico e irrepetible dentro de la tabla es entero y de caracter obligatorio.',
  `Rol_pkIdRol` INT(11) NOT NULL COMMENT 'Este atributo, almacena el id del rol que tiene el usuario;es una llave foranea que proviene de la tabla denominada RolUsuario. Este es un dato unico, entero, repetible y de caracter obligatorio.',
  `nombreUsuario` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato referente al nombre designado al usuario, como descripcion. Este es de tipo Varchar para permitir datos alfa-numericos y de tipo obligatorio.',
  `contraseña` VARCHAR(45) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente a la contraseña de usuario. Este es de tipo Varchar para permitir datos alfa-numericos y es de tipo notnull.',
  PRIMARY KEY (`trabajador_Personas_pkIdPersona`)  COMMENT '',
  INDEX `fk_Usuario_Rol1_idx` (`Rol_pkIdRol` ASC)  COMMENT '',
  CONSTRAINT `fk_Usuario_Rol1`
    FOREIGN KEY (`Rol_pkIdRol`)
    REFERENCES `mydb`.`RolUsuario` (`pkIdRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_trabajador1`
    FOREIGN KEY (`trabajador_Personas_pkIdPersona`)
    REFERENCES `mydb`.`Trabajador` (`Persona_pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8
COMMENT = 'La presente tabla, contiene un id Persona para el identificador del trabajador que tiene usuario. Ademas, estan los atributos, id rol, nombre usuario y contraseña.';


-- -----------------------------------------------------
-- Table `mydb`.`OrdenCompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`OrdenCompra` (
  `idOrdenCompra` INT NOT NULL COMMENT 'Éste atributo, representa el identificador del pedido generado por el gerente o administrador. es la llave primaria de la presente tabla.',
  `fechaOrdenCompra` DATE NOT NULL COMMENT 'Éste atributo almacena el dato referente a la fecha que se solicita el pedido. ',
  `proveedor_Persona_pkIdPersona` INT(11) NOT NULL COMMENT 'Este atributo, es una llave foranea proveniente de la tabla denominada Proveedor, se almacena de este modo para permitir repeticiones.',
  PRIMARY KEY (`idOrdenCompra`)  COMMENT '',
  INDEX `fk_OrdenCompra_proveedor1_idx` (`proveedor_Persona_pkIdPersona` ASC)  COMMENT '',
  CONSTRAINT `fk_OrdenCompra_proveedor1`
    FOREIGN KEY (`proveedor_Persona_pkIdPersona`)
    REFERENCES `mydb`.`Proveedor` (`Persona_pkIdPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'La presente tabla se encuentra identificada bajo un ID de llave primaria para el control de pedidos al proveedor. Esta conformado por fecha del pedido y del id del proveedor.';


-- -----------------------------------------------------
-- Table `mydb`.`ProductoSolicitadoP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProductoSolicitadoP` (
  `OrdenCompra_idOrdenCompra` INT NOT NULL COMMENT 'Éste atributo, representa el identificador de la solicitud de pedido, es una llave foranea hereda de la tabla denominada OrdenCompra.',
  `productoRequerido` VARCHAR(30) NOT NULL COMMENT 'En este atributo se almacena el dato referente al nombre del producto solicitado (descripción del producto).',
  `valorUnitario` INT(8) NOT NULL COMMENT 'En este atributo se almacena el dato referente al precio unitario de costo del producto requerido al proveedor.',
  `ivaProducto` DECIMAL(7) NOT NULL COMMENT 'Dentro de este atributo se almacena el dato correspondiente al iva del producto en petición al proveedor. ',
  `cantidadProducto` INT(7) NOT NULL COMMENT 'En este atributo se almacena el dato referente a la cantidad del producto requerido.',
  `subTotal` INT(10) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al subtotal de la orden de compra de los productos pedidos. ',
  `ivaTotal` DECIMAL(7) NOT NULL COMMENT 'En este atributo se almacena el dato referente al iva general de la orden de compra. ',
  `valorTotal` VARCHAR(10) NOT NULL COMMENT 'En este atributo se almacena el dato correspondiente al total de la petición de productos. ',
  CONSTRAINT `fk_ProductosSolicitados_OrdenCompra1`
    FOREIGN KEY (`OrdenCompra_idOrdenCompra`)
    REFERENCES `mydb`.`OrdenCompra` (`idOrdenCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'En la presente tabla, se alojan los atributos necesarios para la solicitud de productos mediante una orden de compra; estos son, id orden de compra, productoRequerido, valorUnitario, ivaProducto, cantidadProducto, subtotal, ivaTotal y valorTotal.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
